'use client'

import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Button } from '@/components/ui/button'
import { Card } from '@/components/ui/card'
import { RefreshCw, Share2 } from 'lucide-react'
import { quotes, Quote } from '@/data/quotes'

interface GeneratedQuote {
    quote: Quote
    timestamp: number
}

export default function QuoteGenerator() {
    const [currentQuote, setCurrentQuote] = useState<GeneratedQuote | null>(null)
    const [isGenerating, setIsGenerating] = useState(false)

    const generateQuote = () => {
        setIsGenerating(true)

        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º crypto.getRandomValues –¥–ª—è —á–µ—Å—Ç–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            const array = new Uint32Array(1)
            crypto.getRandomValues(array)
            const randomIndex = array[0] % quotes.length

            setCurrentQuote({
                quote: quotes[randomIndex],
                timestamp: Date.now()
            })
            setIsGenerating(false)
        }, 800)
    }

    const shareResult = () => {
        if (currentQuote === null) return

        const text = `"${currentQuote.quote.text}" ‚Äî ${currentQuote.quote.author}`
        navigator.clipboard.writeText(text)
        alert('–¶–∏—Ç–∞—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!')
    }

    return (
        <Card className="p-8 bg-white rounded-2xl shadow-sm border-0">
            <div className="space-y-8">
                {/* –û—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–ø–ª–µ–π —Ü–∏—Ç–∞—Ç—ã */}
                <div className="text-center">
                    <AnimatePresence mode="wait">
                        {currentQuote ? (
                            <motion.div
                                key={currentQuote.quote.text}
                                initial={{ opacity: 0, y: 20 }}
                                animate={{ opacity: 1, y: 0 }}
                                exit={{ opacity: 0, y: -20 }}
                                transition={{ duration: 0.6, ease: "easeOut" }}
                                className="space-y-6"
                            >
                                <div className="bg-gradient-to-br from-[#FCE7D7] to-[#F9F5FF] rounded-2xl p-8 mx-auto max-w-2xl">
                                    <motion.div
                                        initial={{ opacity: 0 }}
                                        animate={{ opacity: 1 }}
                                        transition={{ delay: 0.2 }}
                                        className="text-xl md:text-2xl font-medium text-[#1A1A1A] leading-relaxed mb-6"
                                    >
                                        "{currentQuote.quote.text}"
                                    </motion.div>
                                    <motion.div
                                        initial={{ opacity: 0, x: -20 }}
                                        animate={{ opacity: 1, x: 0 }}
                                        transition={{ delay: 0.4 }}
                                        className="text-lg font-semibold text-[#4B5563] text-right"
                                    >
                                        ‚Äî {currentQuote.quote.author}
                                    </motion.div>
                                </div>
                            </motion.div>
                        ) : (
                            <motion.div
                                initial={{ opacity: 0 }}
                                animate={{ opacity: 1 }}
                                className="text-6xl md:text-7xl font-bold text-[#9CA3AF] mb-4"
                            >
                                üí≠
                            </motion.div>
                        )}
                    </AnimatePresence>
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
                <div className="text-center">
                    <motion.div
                        animate={isGenerating ? { scale: [1, 1.05, 1] } : {}}
                        transition={{ duration: 0.6, repeat: isGenerating ? Infinity : 0 }}
                    >
                        <Button
                            onClick={generateQuote}
                            disabled={isGenerating}
                            className="bg-[#111111] hover:bg-[#333333] text-white px-12 py-4 text-xl font-medium rounded-xl"
                        >
                            {isGenerating ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...' : '–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É'}
                        </Button>
                    </motion.div>
                </div>

                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                {currentQuote && (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        className="flex justify-center gap-4"
                    >
                        <Button
                            variant="outline"
                            onClick={generateQuote}
                            className="text-[#4B5563] border-[#D1D5DB] hover:bg-[#F9F5FF]"
                        >
                            <RefreshCw className="w-4 h-4 mr-2" />
                            –ï—â—ë —Ü–∏—Ç–∞—Ç—É
                        </Button>
                        <Button
                            variant="outline"
                            onClick={shareResult}
                            className="text-[#4B5563] border-[#D1D5DB] hover:bg-[#F9F5FF]"
                        >
                            <Share2 className="w-4 h-4 mr-2" />
                            –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                        </Button>
                    </motion.div>
                )}

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="text-center text-sm text-[#9CA3AF]">
                    <p>–ö–æ–ª–ª–µ–∫—Ü–∏—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏—Ö —Ü–∏—Ç–∞—Ç</p>
                    <p>–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä</p>
                </div>
            </div>
        </Card>
    )
}
